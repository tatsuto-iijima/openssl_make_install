---
# Common
- name: "<Common> Install required packages"
  yum:
    name: "{{ tiomi_required_packages }}"
    state: present

# OpenSSL
- name: "<OpenSSL> Check if libssl is installed"
  stat: path="{{ tiomi_openssl_libssl }}"
  register: tiomi_reg_libssl

- name: "<OpenSSL> Check if libcrypto is installed"
  stat: path="{{ tiomi_openssl_libcrypto }}"
  register: tiomi_reg_libcrypto

- name: "<OpenSSL> Check if openssl command is installed"
  stat: path="{{ tiomi_openssl_cmd }}"
  register: tiomi_reg_openssl_cmd

- name: "<OpenSSL> Judgment installed"
  set_fact:
    tiomi_reg_openssl_installed: true
  when: tiomi_reg_libssl.stat.exists and tiomi_reg_libcrypto.stat.exists and tiomi_reg_openssl_cmd.stat.exists

- name: "<OpenSSL> Judgment not installed"
  set_fact:
    tiomi_reg_openssl_installed: false
  when: not tiomi_reg_libssl.stat.exists or not tiomi_reg_libcrypto.stat.exists or not tiomi_reg_openssl_cmd.stat.exists

- name: "<OpenSSL> Judgment result of whether it is installed"
  debug: msg="OpenSSL not installed."
  when: not tiomi_reg_openssl_installed

- name: "<OpenSSL> Check current version"
  command: "{{ tiomi_openssl_cmd }} version"
  register: tiomi_reg_openssl_current_version
  changed_when: false
  when: tiomi_reg_openssl_installed

- block:
    - name: "<OpenSSL> Download source"
      unarchive:
        src: "{{ tiomi_openssl_src_url }}"
        dest: "{{ tiomi_openssl_download_dir }}"
        remote_src: yes
        owner: root
        group: root

    - name: "<OpenSSL> Execute ./config"
      command:
        cmd: "./config{% if tiomi_openssl_config_option %} {{ tiomi_openssl_config_option | join(' ') }}{% endif %}"
        chdir: "{{ tiomi_openssl_src_dir }}"

    - name: "<OpenSSL> Execute make"
      community.general.make:
        chdir: "{{ tiomi_openssl_src_dir }}"
        target: all

    - name: "<OpenSSL> Execute make install"
      community.general.make:
        chdir: "{{ tiomi_openssl_src_dir }}"
        target: install

    - name: "<OpenSSL> Add library path"
      template:
        src: "{{ tiomi_ld_so_conf_template }}"
        dest: "/etc/ld.so.conf.d/{{ tiomi_ld_so_conf }}"
        owner: root
        group: root
        mode: '0644'

    - name: "<OpenSSL> Excute ldconfig"
      command:
        cmd: "ldconfig"
  when: not tiomi_reg_openssl_installed or (tiomi_reg_openssl_installed and tiomi_openssl_install_version not in tiomi_reg_openssl_current_version.stdout)
